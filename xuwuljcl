import base64
import sys

# Base64加密的脚本内容
encoded_script = """aW1wb3J0IG9zCmltcG9ydCByZQoKIyDot6/lvoTorr7nva4KQkFTRV9ESVIgPSAiL3N0b3JhZ2UvZW11bGF0ZWQvMC/omZrml6Dmi6bmiKrlt6XlhbciCklOUFVUX0ZJTEUgPSBvcy5wYXRoLmpvaW4oQkFTRV9ESVIsICLopoHlpITnkIbnmoTop4TliJkudHh0IikgICMg6L6T5YWl5paH5Lu2Ck9VVFBVVF9ESVIgPSBvcy5wYXRoLmpvaW4oQkFTRV9ESVIsICLovpPlh7rop4TliJkiKSAgIyDovpPlh7rmlofku7blpLkKUlVMRV9GSUxFID0gb3MucGF0aC5qb2luKE9VVFBVVF9ESVIsICJBZEd1YXJk6KeE5YiZLnR4dCIpICAjIOinhOWImeaWh+S7tui3r+W+hAoKIyDop4TliJnmqKHmnb8KSVBfUlVMRV9UUEwgPSAie2lwfSRuZXR3b3JrIiAgICAgICAgICMgSVDop4TliJnvvJpJUCvlkI7nvIAKUE9SVF9SVUxFX1RQTCA9ICIqOntwb3J0fSRuZXR3b3JrIiAgICMg56uv5Y+j6KeE5YiZ77yaKjrnq6/lj6Mr5ZCO57yACkRPTUFJTl9SVUxFX1RQTCA9ICJ8fHtkb21haW59XiIgICAgICAjIOWfn+WQjeinhOWImQpET01BSU5fV1dXX1RQTCA9ICJ8fHd3dy57ZG9tYWlufV4iICAgIyDluKZ3d3fnmoTln5/lkI3op4TliJkKCgpkZWYgcHJpbnRfdGl0bGUodGV4dCk6CiAgICAiIiLmiZPljbDluKbovrnmoYbnmoTmoIfpopgiIiIKICAgIHByaW50KCJcbiIgKyAiPSIgKiAobGVuKHRleHQpICsgNCkpCiAgICBwcmludChmIiAge3RleHR9ICAiKQogICAgcHJpbnQoIj0iICogKGxlbih0ZXh0KSArIDQpKQoKCmRlZiBpbml0X2ZvbGRlcnNfYW5kX2ZpbGVzKCk6CiAgICAiIiLliJ3lp4vljJbovpPlhaXmlofku7blkozovpPlh7rmlofku7blpLnvvIjnoa7kv53pg73lrZjlnKjvvIkiIiIKICAgICMg55So5Zu+5qCH5Yy65YiG54q25oCB77yM5aKe5by66KeG6KeJ5pWI5p6cCiAgICBmb2xkZXJfc3RhdHVzID0gW10KICAgIAogICAgIyAxLiDliJvlu7rln7rnoYDmlofku7blpLkKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhCQVNFX0RJUik6CiAgICAgICAgb3MubWFrZWRpcnMoQkFTRV9ESVIsIGV4aXN0X29rPVRydWUpCiAgICAgICAgZm9sZGVyX3N0YXR1cy5hcHBlbmQoZiLinIUg5bey5Yib5bu65Z+656GA5paH5Lu25aS577yae0JBU0VfRElSfSIpCiAgICBlbHNlOgogICAgICAgIGZvbGRlcl9zdGF0dXMuYXBwZW5kKGYi8J+TgiDln7rnoYDmlofku7blpLnlt7LlrZjlnKjvvJp7QkFTRV9ESVJ9IikKICAgIAogICAgIyAyLiDliJvlu7rovpPlh7rmlofku7blpLkKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhPVVRQVVRfRElSKToKICAgICAgICBvcy5tYWtlZGlycyhPVVRQVVRfRElSLCBleGlzdF9vaz1UcnVlKQogICAgICAgIGZvbGRlcl9zdGF0dXMuYXBwZW5kKGYi4pyFIOW3suWIm+W7uui+k+WHuuaWh+S7tuWkue+8mntPVVRQVVRfRElSfSIpCiAgICBlbHNlOgogICAgICAgIGZvbGRlcl9zdGF0dXMuYXBwZW5kKGYi8J+TgiDovpPlh7rmlofku7blpLnlt7LlrZjlnKjvvJp7T1VUUFVUX0RJUn0iKQogICAgCiAgICAjIDMuIOWIm+W7uui+k+WFpeaWh+S7tgogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKElOUFVUX0ZJTEUpOgogICAgICAgIHdpdGggb3BlbihJTlBVVF9GSUxFLCAidyIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgICAgIGYud3JpdGUoIuivt+a3u+WKoOimgeaLpuaIqueahElQ44CB56uv5Y+j44CB5Z+f5ZCN77yI5q+P6KGM5LiA5Liq77yJ77yaXG4iKQogICAgICAgICAgICBmLndyaXRlKCIjIOekuuS+i++8mlxuIikKICAgICAgICAgICAgZi53cml0ZSgiIyAxOTIuMTY4LjEuMSAgIyDnlJ/miJAgSVAkbmV0d29ya1xuIikKICAgICAgICAgICAgZi53cml0ZSgiIyA4MDgwICAgICAgICAgIyDnlJ/miJAgKjrnq6/lj6MkbmV0d29ya1xuIikKICAgICAgICAgICAgZi53cml0ZSgiIyBleGFtcGxlLmNvbSAgIyDnlJ/miJAgfHzln5/lkI1eXG4iKQogICAgICAgIGZvbGRlcl9zdGF0dXMuYXBwZW5kKGYi4pyFIOW3suWIm+W7uui+k+WFpeaWh+S7tu+8mntJTlBVVF9GSUxFfSIpCiAgICBlbHNlOgogICAgICAgIGZvbGRlcl9zdGF0dXMuYXBwZW5kKGYi8J+ThCDovpPlhaXmlofku7blt7LlrZjlnKjvvJp7SU5QVVRfRklMRX0iKQogICAgCiAgICAjIOaJk+WNsOWIneWni+WMlue7k+aenAogICAgcHJpbnQoIlxu44CQ5Yid5aeL5YyW54q25oCB44CRIikKICAgIGZvciBzdGF0dXMgaW4gZm9sZGVyX3N0YXR1czoKICAgICAgICBwcmludChmIiAge3N0YXR1c30iKQoKCmRlZiBjbGFzc2lmeV9jb250ZW50KCk6CiAgICAiIiLor7vlj5bovpPlhaXmlofku7blubbliIbnsbtJUOOAgeerr+WPo+OAgeWfn+WQjSIiIgogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKElOUFVUX0ZJTEUpOgogICAgICAgIHJldHVybiBbXSwgW10sIFtdCiAgICAKICAgIHdpdGggb3BlbihJTlBVVF9GSUxFLCAiciIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgbGluZXMgPSBbbGluZS5zdHJpcCgpIGZvciBsaW5lIGluIGYucmVhZGxpbmVzKCkgCiAgICAgICAgICAgICAgICAgaWYgbGluZS5zdHJpcCgpIGFuZCBub3QgbGluZS5zdGFydHN3aXRoKCIjIildCiAgICAKICAgIGlwX2xpc3QsIHBvcnRfbGlzdCwgZG9tYWluX2xpc3QgPSBbXSwgW10sIFtdCiAgICBpcF9wYXR0ZXJuID0gcideXGQrXC5cZCtcLlxkK1wuXGQrJCcKICAgIHBvcnRfcGF0dGVybiA9IHInXlxkKyQnCiAgICBkb21haW5fcGF0dGVybiA9IHInXlthLXpBLVowLTlfLV0rKD86XC5bYS16QS1aMC05Xy1dKykqXC5bYS16QS1aXXsyLH0kJwogICAgCiAgICBmb3IgbGluZSBpbiBsaW5lczoKICAgICAgICBpZiByZS5tYXRjaChpcF9wYXR0ZXJuLCBsaW5lKToKICAgICAgICAgICAgaXBfbGlzdC5hcHBlbmQobGluZSkKICAgICAgICBlbGlmIHJlLm1hdGNoKHBvcnRfcGF0dGVybiwgbGluZSkgYW5kIDEgPD0gaW50KGxpbmUpIDw9IDY1NTM1OgogICAgICAgICAgICBwb3J0X2xpc3QuYXBwZW5kKGxpbmUpCiAgICAgICAgZWxpZiByZS5tYXRjaChkb21haW5fcGF0dGVybiwgbGluZSk6CiAgICAgICAgICAgIGRvbWFpbl9saXN0LmFwcGVuZChsaW5lKQogICAgCiAgICByZXR1cm4gaXBfbGlzdCwgcG9ydF9saXN0LCBkb21haW5fbGlzdAoKCmRlZiBnZW5lcmF0ZV9ydWxlcyhpcF9saXN0LCBwb3J0X2xpc3QsIGRvbWFpbl9saXN0KToKICAgICIiIueUn+aIkOinhOWImeW5tuWOu+mHjSIiIgogICAgcnVsZXMgPSBbXQogICAgZm9yIGlwIGluIGlwX2xpc3Q6CiAgICAgICAgcnVsZXMuYXBwZW5kKElQX1JVTEVfVFBMLmZvcm1hdChpcD1pcCkpCiAgICBmb3IgcG9ydCBpbiBwb3J0X2xpc3Q6CiAgICAgICAgcnVsZXMuYXBwZW5kKFBPUlRfUlVMRV9UUEwuZm9ybWF0KHBvcnQ9cG9ydCkpCiAgICBmb3IgZG9tYWluIGluIGRvbWFpbl9saXN0OgogICAgICAgIHJ1bGVzLmFwcGVuZChET01BSU5fUlVMRV9UUEwuZm9ybWF0KGRvbWFpbj1kb21haW4pKQogICAgICAgIHJ1bGVzLmFwcGVuZChET01BSU5fV1dXX1RQTC5mb3JtYXQoZG9tYWluPWRvbWFpbikpCiAgICByZXR1cm4gbGlzdChkaWN0LmZyb21rZXlzKHJ1bGVzKSkgICMg5Y676YeNCgoKZGVmIG1lcmdlX2FuZF9zYXZlKG5ld19ydWxlcyk6CiAgICAiIiLlkIjlubbmlrDop4TliJnkuI7lt7LmnInop4TliJnlubbkv53lrZgiIiIKICAgIGV4aXN0aW5nID0gW10KICAgIGlmIG9zLnBhdGguZXhpc3RzKFJVTEVfRklMRSk6CiAgICAgICAgd2l0aCBvcGVuKFJVTEVfRklMRSwgInIiLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmOgogICAgICAgICAgICBleGlzdGluZyA9IFtsaW5lLnN0cmlwKCkgZm9yIGxpbmUgaW4gZi5yZWFkbGluZXMoKSBpZiBsaW5lLnN0cmlwKCldCiAgICAKICAgIGFsbF9ydWxlcyA9IG5ld19ydWxlcyArIFtyIGZvciByIGluIGV4aXN0aW5nIGlmIHIgbm90IGluIG5ld19ydWxlc10KICAgIAogICAgd2l0aCBvcGVuKFJVTEVfRklMRSwgInciLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmOgogICAgICAgIGYud3JpdGUoIlxuIi5qb2luKGFsbF9ydWxlcykgKyAiXG4iKQogICAgCiAgICBwcmludChmIlxu8J+TjCDop4TliJnlt7Lkv53lrZjliLDvvJp7UlVMRV9GSUxFfSIpCiAgICBwcmludChmIvCfk4og5paw5aKe6KeE5YiZ77yae2xlbihuZXdfcnVsZXMpfSDmnaEgfCDmgLvop4TliJnvvJp7bGVuKGFsbF9ydWxlcyl9IOadoSIpCgoKZGVmIG1haW4oKToKICAgICMg5qCH6aKY5qiq5bmFCiAgICBwcmludF90aXRsZSgiQWRHdWFyZOinhOWImeeUn+aIkOW3peWFtyIpCiAgICAKICAgICMg5Yid5aeL5YyW5paH5Lu25ZKM5paH5Lu25aS5CiAgICBpbml0X2ZvbGRlcnNfYW5kX2ZpbGVzKCkKICAgIAogICAgIyDliIbnsbvlhoXlrrkKICAgIGlwX2xpc3QsIHBvcnRfbGlzdCwgZG9tYWluX2xpc3QgPSBjbGFzc2lmeV9jb250ZW50KCkKICAgIAogICAgIyDmmL7npLrmo4DmtYvnu5PmnpzvvIjnlKjlm77moIflop7lvLrlj6/or7vmgKfvvIkKICAgIHByaW50KCJcbuOAkOajgOa1i+WIsOeahOWGheWuueOAkSIpCiAgICBwcmludChmIiAg8J+MkCBJUOWcsOWdgO+8mntsZW4oaXBfbGlzdCl9IOS4qiIpCiAgICBwcmludChmIiAg8J+UjCDnq6/lj6PvvJp7bGVuKHBvcnRfbGlzdCl9IOS4qiIpCiAgICBwcmludChmIiAg8J+Pt++4jyDln5/lkI3vvJp7bGVuKGRvbWFpbl9saXN0KX0g5LiqIikKICAgIAogICAgIyDml6DlhoXlrrnmj5DnpLoKICAgIGlmIG5vdCBpcF9saXN0IGFuZCBub3QgcG9ydF9saXN0IGFuZCBub3QgZG9tYWluX2xpc3Q6CiAgICAgICAgcHJpbnQoIlxu4pqg77iPIOaPkOekuu+8mui+k+WFpeaWh+S7tuS4reayoeacieWPr+eUn+aIkOeahOinhOWIme+8jOivt+WFiOe8lui+keS7peS4i+aWh+S7tu+8miIpCiAgICAgICAgcHJpbnQoZiIgICB7SU5QVVRfRklMRX0iKQogICAgICAgIHJldHVybgogICAgCiAgICAjIOeUn+aIkOinhOWImQogICAgbmV3X3J1bGVzID0gZ2VuZXJhdGVfcnVsZXMoaXBfbGlzdCwgcG9ydF9saXN0LCBkb21haW5fbGlzdCkKICAgIHByaW50KGYiXG7inKgg5bey55Sf5oiQ5paw6KeE5YiZ77yae2xlbihuZXdfcnVsZXMpfSDmnaEiKQogICAgCiAgICAjIOehruiupOS/neWtmO+8iOWinuWKoOS6pOS6kuWPi+WlveaAp++8iQogICAgY29uZmlybSA9IGlucHV0KCJcbuaYr+WQpuWwhuinhOWImeS/neWtmOWIsOi+k+WHuuaWh+S7tuWkue+8n++8iHkvbu+8ie+8miIpLnN0cmlwKCkubG93ZXIoKQogICAgd2hpbGUgY29uZmlybSBub3QgaW4gWyJ5IiwgIm4iXToKICAgICAgICBjb25maXJtID0gaW5wdXQoIuivt+i+k+WFpSB577yI56Gu6K6k77yJ5oiWIG7vvIjlj5bmtojvvInvvJoiKS5zdHJpcCgpLmxvd2VyKCkKICAgIAogICAgaWYgY29uZmlybSA9PSAieSI6CiAgICAgICAgbWVyZ2VfYW5kX3NhdmUobmV3X3J1bGVzKQogICAgICAgIHByaW50KCJcbuKchSDmk43kvZzlrozmiJDvvIEiKQogICAgZWxzZToKICAgICAgICBwcmludCgiXG7inYwg5bey5Y+W5raI5L+d5a2Y44CCIikKICAgIAogICAgIyDnu5PmnZ/mj5DnpLoKICAgIHByaW50KCJcbiIgKyAiPSIqMzApCiAgICBwcmludCgi5oSf6LCi5L2/55So77yM56iL5bqP5bey57uT5p2fIikKICAgIHByaW50KCI9IiozMCArICJcbiIpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIG1haW4oKQ=="""

# 解密并执行
try:
    decoded_script = base64.b64decode(encoded_script).decode('utf-8')
    exec(decoded_script)
except Exception as e:
    print(f"执行失败：{str(e)}")
    sys.exit(1)
