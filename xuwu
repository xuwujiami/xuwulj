import base64
import sys

# Base64加密的脚本内容
encoded_script = """aW1wb3J0IGRwa3QKaW1wb3J0IHNvY2tldAppbXBvcnQgb3MKZnJvbSBjb2xsZWN0aW9ucyBpbXBvcnQgZGVmYXVsdGRpY3QKCiMg6Lev5b6E6YWN572uCkNBUF9GT0xERVIgPSAiL3N0b3JhZ2UvZW11bGF0ZWQvMC/omZrml6Dmi6bmiKrlt6XlhbcvY2Fw5paH5Lu2IiAgIyBjYXDmlofku7blrZjmlL7nm67lvZUKT1VUUFVUX0ZPTERFUiA9ICIvc3RvcmFnZS9lbXVsYXRlZC8wL+iZmuaXoOaLpuaIquW3peWFty9jYXDlpITnkIYiICAjIOe7k+aenOi+k+WHuuebruW9lQoKZGVmIHByaW50X2Jhbm5lcih0ZXh0KToKICAgICIiIuaJk+WNsOW4pui+ueahhueahOagh+mimCIiIgogICAgcHJpbnQoIlxuIiArICI9IiAqIChsZW4odGV4dCkgKyA0KSkKICAgIHByaW50KGYiICB7dGV4dH0gICIpCiAgICBwcmludCgiPSIgKiAobGVuKHRleHQpICsgNCkgKyAiXG4iKQoKZGVmIGNyZWF0ZV9mb2xkZXJzKCk6CiAgICAiIiLliJvlu7rlv4XopoHmlofku7blpLnvvIjlpoLmnpzkuI3lrZjlnKjvvIkiIiIKICAgIGZvbGRlcl9jcmVhdGVkID0gRmFsc2UKICAgICMg5Yib5bu6Y2Fw5paH5Lu25paH5Lu25aS5CiAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoQ0FQX0ZPTERFUik6CiAgICAgICAgb3MubWFrZWRpcnMoQ0FQX0ZPTERFUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgICAgICBwcmludChmIuKchSDlt7LliJvlu7pjYXDmlofku7blrZjmlL7nm67lvZXvvJp7Q0FQX0ZPTERFUn0iKQogICAgICAgIGZvbGRlcl9jcmVhdGVkID0gVHJ1ZQogICAgIyDliJvlu7rnu5PmnpzovpPlh7rmlofku7blpLkKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhPVVRQVVRfRk9MREVSKToKICAgICAgICBvcy5tYWtlZGlycyhPVVRQVVRfRk9MREVSLCBleGlzdF9vaz1UcnVlKQogICAgICAgIHByaW50KGYi4pyFIOW3suWIm+W7uue7k+aenOi+k+WHuuebruW9le+8mntPVVRQVVRfRk9MREVSfSIpCiAgICAgICAgZm9sZGVyX2NyZWF0ZWQgPSBUcnVlCiAgICBpZiBub3QgZm9sZGVyX2NyZWF0ZWQ6CiAgICAgICAgcHJpbnQoIvCfk4Ig5paH5Lu25aS55bey5bCx57uq77yM5peg6ZyA5Yib5bu6IikKCmRlZiBpcF90b19zdHIoaXApOgogICAgIiIi5bCG5LqM6L+b5Yi2SVDovazmjaLkuLrlrZfnrKbkuLIiIiIKICAgIHJldHVybiBzb2NrZXQuaW5ldF9udG9wKHNvY2tldC5BRl9JTkVULCBpcCkKCmRlZiBhbmFseXplX3NpbmdsZV9jYXAoZmlsZV9wYXRoKToKICAgICIiIuino+aekOWNleS4qmNhcOaWh+S7tuW5tui/lOWbnue7k+aenOaWh+acrCIiIgogICAgaXBfcG9ydHMgPSBkZWZhdWx0ZGljdChzZXQpCiAgICBwb3J0X2NvdW50cyA9IGRlZmF1bHRkaWN0KGludCkKICAgIGFsbF9jb25uZWN0aW9ucyA9IFtdCgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihmaWxlX3BhdGgsICdyYicpIGFzIGY6CiAgICAgICAgICAgIHBjYXAgPSBkcGt0LnBjYXAuUmVhZGVyKGYpCiAgICAgICAgICAgIHBhY2tldF9jb3VudCA9IDAKCiAgICAgICAgICAgIGZvciBfLCBidWYgaW4gcGNhcDoKICAgICAgICAgICAgICAgIHBhY2tldF9jb3VudCArPSAxCiAgICAgICAgICAgICAgICBldGggPSBkcGt0LmV0aGVybmV0LkV0aGVybmV0KGJ1ZikKICAgICAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGV0aC5kYXRhLCBkcGt0LmlwLklQKToKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgICAgIGlwID0gZXRoLmRhdGEKICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoaXAuZGF0YSwgKGRwa3QudGNwLlRDUCwgZHBrdC51ZHAuVURQKSk6CiAgICAgICAgICAgICAgICAgICAgdHJhbnNwb3J0ID0gaXAuZGF0YQogICAgICAgICAgICAgICAgICAgIHNyY19pcCA9IGlwX3RvX3N0cihpcC5zcmMpCiAgICAgICAgICAgICAgICAgICAgZHN0X2lwID0gaXBfdG9fc3RyKGlwLmRzdCkKICAgICAgICAgICAgICAgICAgICBzcmNfcG9ydCA9IHN0cih0cmFuc3BvcnQuc3BvcnQpCiAgICAgICAgICAgICAgICAgICAgZHN0X3BvcnQgPSBzdHIodHJhbnNwb3J0LmRwb3J0KQoKICAgICAgICAgICAgICAgICAgICBjb25uID0gZiJ7c3JjX2lwfTp7c3JjX3BvcnR9IC0+IHtkc3RfaXB9Ontkc3RfcG9ydH0iCiAgICAgICAgICAgICAgICAgICAgYWxsX2Nvbm5lY3Rpb25zLmFwcGVuZChjb25uKQogICAgICAgICAgICAgICAgICAgIGlwX3BvcnRzW3NyY19pcF0uYWRkKHNyY19wb3J0KQogICAgICAgICAgICAgICAgICAgIGlwX3BvcnRzW2RzdF9pcF0uYWRkKGRzdF9wb3J0KQogICAgICAgICAgICAgICAgICAgIHBvcnRfY291bnRzW3NyY19wb3J0XSArPSAxCiAgICAgICAgICAgICAgICAgICAgcG9ydF9jb3VudHNbZHN0X3BvcnRdICs9IDEKCiAgICAgICAgICAgICMg55Sf5oiQ57uT5p6c5paH5pysCiAgICAgICAgICAgIHJlc3VsdF90ZXh0ID0gW10KICAgICAgICAgICAgcmVzdWx0X3RleHQuYXBwZW5kKGYiPT09PT0ge29zLnBhdGguYmFzZW5hbWUoZmlsZV9wYXRoKX0g5YiG5p6Q57uT5p6cID09PT09IikKICAgICAgICAgICAgcmVzdWx0X3RleHQuYXBwZW5kKGYi5oC75pWw5o2u5YyF5pWw77yae3BhY2tldF9jb3VudH0iKQogICAgICAgICAgICByZXN1bHRfdGV4dC5hcHBlbmQoZiLmj5Dlj5bliLBUQ1AvVURQ6L+e5o6l6K6w5b2V77yae2xlbihhbGxfY29ubmVjdGlvbnMpfeadoVxuIikKCiAgICAgICAgICAgIHJlc3VsdF90ZXh0LmFwcGVuZCgiPT09PT0gSVDliIbnsbvvvIjkvb/nlKjnmoTnq6/lj6PvvIkgPT09PT0iKQogICAgICAgICAgICBmb3IgaXAsIHBvcnRzIGluIHNvcnRlZChpcF9wb3J0cy5pdGVtcygpKToKICAgICAgICAgICAgICAgIHJlc3VsdF90ZXh0LmFwcGVuZChmIntpcH06IHtzb3J0ZWQocG9ydHMsIGtleT1pbnQpfSIpCgogICAgICAgICAgICByZXN1bHRfdGV4dC5hcHBlbmQoIlxuPT09PT0g56uv5Y+j5Ye6546w5qyh5pWwID09PT09IikKICAgICAgICAgICAgZm9yIHBvcnQsIGNvdW50IGluIHNvcnRlZChwb3J0X2NvdW50cy5pdGVtcygpLCBrZXk9bGFtYmRhIHg6IGludCh4WzBdKSk6CiAgICAgICAgICAgICAgICByZXN1bHRfdGV4dC5hcHBlbmQoZiLnq6/lj6Mge3BvcnR9OiDlh7rnjrAge2NvdW50fSDmrKEiKQoKICAgICAgICAgICAgcmV0dXJuICJcbiIuam9pbihyZXN1bHRfdGV4dCkKCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcmV0dXJuIGYi4p2MIOino+aekCB7b3MucGF0aC5iYXNlbmFtZShmaWxlX3BhdGgpfSDlh7rplJnvvJp7c3RyKGUpfSIKCmRlZiBiYXRjaF9hbmFseXplX2NhcCgpOgogICAgIiIi5om56YeP5aSE55CGY2Fw5paH5Lu25bm25aKe5Yqg56Gu6K6k5q2l6aqkIiIiCiAgICAjIOiOt+WPluaJgOaciWNhcC9wY2Fw5paH5Lu2CiAgICBjYXBfZmlsZXMgPSBbXQogICAgZm9yIGZpbGVuYW1lIGluIG9zLmxpc3RkaXIoQ0FQX0ZPTERFUik6CiAgICAgICAgaWYgZmlsZW5hbWUubG93ZXIoKS5lbmRzd2l0aCgoJy5jYXAnLCAnLnBjYXAnKSk6CiAgICAgICAgICAgIGNhcF9maWxlcy5hcHBlbmQob3MucGF0aC5qb2luKENBUF9GT0xERVIsIGZpbGVuYW1lKSkKCiAgICBpZiBub3QgY2FwX2ZpbGVzOgogICAgICAgIHByaW50KCJcbuKaoO+4jyDmj5DnpLrvvJrlnKjku6XkuIvnm67lvZXmnKrmib7liLAuY2Fw5oiWLnBjYXDmlofku7YiKQogICAgICAgIHByaW50KGYiICAge0NBUF9GT0xERVJ9IikKICAgICAgICBwcmludCgiICAg6K+35YWI5bCG5paH5Lu25pS+5YWl6K+l55uu5b2V5ZCO5YaN6L+Q6KGM5bel5YW3IikKICAgICAgICByZXR1cm4KCiAgICAjIOaYvuekuuW+heWkhOeQhuaWh+S7tuWIl+ihqAogICAgcHJpbnQoIlxu8J+TiyDlj5HnjrDlvoXlpITnkIbmlofku7bvvJoiKQogICAgZm9yIGksIGZpbGUgaW4gZW51bWVyYXRlKGNhcF9maWxlcywgMSk6CiAgICAgICAgcHJpbnQoZiIgICB7aX0uIHtvcy5wYXRoLmJhc2VuYW1lKGZpbGUpfSIpCiAgICBwcmludChmIlxu5YWx5Y+R546wIHtsZW4oY2FwX2ZpbGVzKX0g5Liq5paH5Lu2IikKCiAgICAjIOehruiupOaYr+WQpuW8gOWni+WkhOeQhgogICAgY29uZmlybSA9IGlucHV0KCJcbuaYr+WQpuW8gOWni+WIhuaekOi/meS6m+aWh+S7tu+8nyh5L24p77yaIikuc3RyaXAoKS5sb3dlcigpCiAgICBpZiBjb25maXJtICE9ICd5JzoKICAgICAgICBwcmludCgiXG7wn5qrIOaTjeS9nOW3suWPlua2iCIpCiAgICAgICAgcmV0dXJuCgogICAgIyDlvIDlp4vmibnph4/liIbmnpAKICAgIHByaW50KCJcbvCfmoAg5byA5aeL5YiG5p6Q5paH5Lu2Li4uIikKICAgIGZvciBpLCBmaWxlIGluIGVudW1lcmF0ZShjYXBfZmlsZXMsIDEpOgogICAgICAgIHByaW50KGYiXG4tLS0tLSDlpITnkIbnrKwge2l9L3tsZW4oY2FwX2ZpbGVzKX0g5Liq5paH5Lu2IC0tLS0tIikKICAgICAgICBwcmludChmIuato+WcqOWIhuaekO+8mntvcy5wYXRoLmJhc2VuYW1lKGZpbGUpfSIpCiAgICAgICAgCiAgICAgICAgcmVzdWx0ID0gYW5hbHl6ZV9zaW5nbGVfY2FwKGZpbGUpCiAgICAgICAgCiAgICAgICAgIyDkv53lrZjnu5PmnpwKICAgICAgICBvdXRwdXRfZmlsZW5hbWUgPSBmIntvcy5wYXRoLnNwbGl0ZXh0KG9zLnBhdGguYmFzZW5hbWUoZmlsZSkpWzBdfV/nu5PmnpwudHh0IgogICAgICAgIG91dHB1dF9wYXRoID0gb3MucGF0aC5qb2luKE9VVFBVVF9GT0xERVIsIG91dHB1dF9maWxlbmFtZSkKICAgICAgICB3aXRoIG9wZW4ob3V0cHV0X3BhdGgsICJ3IiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgZi53cml0ZShyZXN1bHQpCiAgICAgICAgCiAgICAgICAgcHJpbnQoZiLinIUg5bey5L+d5a2Y57uT5p6c77yae291dHB1dF9maWxlbmFtZX0iKQoKICAgIHByaW50KCJcbvCfjokg5omA5pyJ5paH5Lu25YiG5p6Q5a6M5oiQ77yBIikKICAgIHByaW50KGYi8J+TjCDnu5PmnpzlrZjmlL7nm67lvZXvvJp7T1VUUFVUX0ZPTERFUn0iKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50X2Jhbm5lcigiQ0FQ5paH5Lu25om56YeP5YiG5p6Q5bel5YW3IikKICAgIGNyZWF0ZV9mb2xkZXJzKCkKICAgIGJhdGNoX2FuYWx5emVfY2FwKCkKICAgIHByaW50KCJcbiIgKyAiPSIqMzApCiAgICBwcmludCgi5oSf6LCi5L2/55So77yM56iL5bqP5bey57uT5p2fIikKICAgIHByaW50KCI9IiozMCArICJcbiIp"""

# 解密并执行
try:
    decoded_script = base64.b64decode(encoded_script).decode('utf-8')
    exec(decoded_script)
except Exception as e:
    print(f"执行失败：{str(e)}")
    sys.exit(1)
